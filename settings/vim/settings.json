{
    // user settings only
    "window.menuBarVisibility": "toggle",
    "window.restoreFullscreen": true,
    // extension
    "jupyter.askForKernelRestart": false,
    "vim.normalModeKeyBindings": [
        {
            "before":["<C-n>"],
            "commands": [":nohl"]
        },
        {
            "before": ["<space>", "w"],
            "commands": ["workbench.action.files.save"]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [ "g", "o" ], "after": [ "o", "<Esc>", "k" ]
        },
        {
            "before": [ "g", "O" ], "after": [ "O", "<Esc>" ]
        },
        {
            "before": ["<space>", "m"],
            "commands": ["workbench.action.quickOpen"]
        },
        {
            "before": ["<space>", "c"],
            "commands": ["workbench.action.showCommands"]
        },
        // multi cursor
        // need this keybinding both for normal and visual mode
        {
            "before": ["<C-d>"],
            "commands": ["editor.action.addSelectionToNextFindMatch"]
        },
        // window move
        {
            "before": ["tab"], "after": [ "<C-w>", "w" ]
        },
        {
            "before": ["s", "p"],
            "commands": [":vsplit"]
        },
        {
            "before": ["s", "h"],
            "commands": [":split"]
        },
        {
            "before": ["s", "o"],
            "after": ["<C-w>", "o"]
        },
        {
            "before": ["q"],
            "commands": ["workbench.action.closeActiveEditor"]
        },
        {
            "before": ["Q"],
            "commands": ["workbench.action.closeEditorsAndGroup"]
        },
        // easy motion
        {
            "before": ["leader", "j"],
            "after": ["leader", "leader", "j"]
        },
        {
            "before": ["leader", "k"],
            "after": ["leader", "leader", "k"]
        },
        {
            "before": ["leader", "s"],
            "after": ["leader", "leader", "s"]
        },
        {
            "before": ["leader", "f"],
            "after": ["leader", "leader", "f"]
        },
        {
            "before": ["leader", "F"],
            "after": ["leader", "leader", "F"]
        },
        {
            "before": ["leader", "w"],
            "after": ["leader", "leader", "w"]
        },
        {
            "before": ["leader", "b"],
            "after": ["leader", "leader", "b"]
        },
        {
            "before": ["leader", "leader", "b", "d", "w"],
            "after": ["leader", "leader", "leader", "b", "d", "w"]
        },
        // window transition
        {
            "before": ["<space>", "1"],
            "commands": ["workbench.action.focusFirstEditorGroup"]
        },
        {
            "before": ["<space>", "2"],
            "commands": ["workbench.action.focusSecondEditorGroup"]
        },
        {
            "before": ["<space>", "3"],
            "commands": ["workbench.action.focusThirdEditorGroup"]
        },
        {
            "before": ["<space>", "4"],
            "commands": ["workbench.action.focusFourthEditorGroup"]
        },

        // {
        //     "before": ["<space>", "t"],
        //     "commands": [["workbench.view.testing.focus"]]
        // },
        {
            "before": ["<space>", "f"],
            "commands": ["workbench.view.explorer"]
        },
        // lsp
        {
            "before": ["K"],
            "commands": ["editor.action.showHover"]
        },
        {
            "before": ["<space>", "r", "n"],
            "commands": ["editor.action.rename"]
        },
        {
            "before": ["g", "r"],
            "commands": ["editor.action.goToReferences"]
        },
        // python
        {
            // "before": ["<C-i>"],
            "before": ["<space>", "i"],
            "commands": ["editor.action.formatDocument", "python.sortImports"]
        },
        {
            "before": ["<space>", "o"],
            "commands": ["editor.action.formatDocument", "python.sortImports", "workbench.action.files.save"]
        },
        // git related
        {
            "before": ["g", "s"],
            "commands": ["workbench.view.scm"]
        },
        {
            "before": ["g", "a"],
            "commands": ["git.stage"]
        },
        {
            "before": ["g", "k"],
            "commands": ["git.commit"]
        },
        {
            "before": ["g", "u"],
            "commands": ["git.undoCommit"]
        },
        {
            "before": ["g", "M"],
            "commands": ["git.commitStagedAmend"]
        },
        {
            "before": ["g", "n"],
            "commands": ["git.openChange"]
        },
        {
            "before": ["["],
            "commands": ["workbench.action.editor.nextChange"]
        },
        // {
        //     "before": ["["],
        //     "commands": ["workbench.action.compareEditor.nextChange"],
        // }
        // toggle visibility
        {
            "before": ["<space>", "b"],
            "commands": ["workbench.action.toggleSidebarVisibility"]
        },
        {
            "before": ["<space>", "s"],
            "commands": ["workbench.action.toggleStatusbarVisibility"]
        },
        {
            "before": ["<C-j>"],
            "commands": ["workbench.action.togglePanel"]
        },
        {
            "before": ["<space>", "p"],
            "commands": [":registers"]
        },
        {
            "before": ["<space>", "j"],
            "commands": [":marks"]
        },
        // bookmark
        {
            "before": ["m", "n"],
            "commands": ["bookmarks.jumpToNext"]
        },
        {
            "before": ["m", "p"],
            "commands": ["bookmarks.jumpToPrevious"]
        },
        {
            "before": ["m", "t"],
            "commands": ["bookmarks.toggle"]
        },
        {
            "before": ["m", "l"],
            "commands": ["bookmarks.list"]
        },
        {
            "before": ["m", "L"],
            "commands": ["bookmarks.listFromAllFiles"]
        },
        {
            "before": ["m", "c"],
            "commands": ["bookmarks.clear"]
        },
        {
            "before": ["m", "C"],
            "commands": ["bookmarks.clearFromAllFiles"]
        },
        // search/replace settings
        {
            "before": ["<C-h>"],
            "commands": ["editor.action.startFindReplaceAction"]
        },
        {
            "before": [";", "s"],
            "commands": ["actions.find"]
        },
        // debug
        {
            "before": ["<space>", "y"],
            "commands": ["workbench.debug.action.toggleRepl"],
        },
        // python test run/debug
        {

            "before": ["<space>", "t", "c"],
            "commands": ["testing.debugAtCursor"]
        },
        {

            "before": ["<space>", "t", "r"],
            "commands": ["testing.runAtCursor"]
        },
        {

            "before": ["<space>", "t", "f"],
            "commands": ["testing.CurrentFile"]
        },
        // code action
        {

            "before": ["<space>", "."],
            "commands": ["editor.action.quickFix"]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": ["g", "r"],
            "commands": ["git.stageSelectedRanges"]
        },
        {
            "before": ["g", "e"],
            "commands": ["git.revertSelectedRanges"]
        },
        {
            // "before": [";", "e"],
            "before": ["<space>"],
            "commands": ["editor.debug.action.selectionToRepl"]
        },
        // need this keybinding both for normal and visual mode
        // multi cursor
        {
            "before": ["<C-d>"],
            "commands": ["editor.action.addSelectionToNextFindMatch"]
        },
        // command
        {
            "before": ["<space>", "m"],
            "commands": ["workbench.action.quickOpen"]
        },
        {
            "before": ["<space>", "c"],
            "commands": ["workbench.action.showCommands"]
        },
        // code action
        {

            "before": ["<space>", "."],
            "commands": ["editor.action.quickFix"]
        }
    ],
    "workbench.editor.showTabs": false,
    "editor.minimap.enabled": false,
    "window.titleBarStyle": "custom",
    "explorer.confirmDelete": false,
    // working without tab, https://code.visualstudio.com/docs/getstarted/userinterface#_working-without-tabs
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.enablePreview": false,
    "workbench.editor.enablePreviewFromQuickOpen": false,
    //
    "workbench.editor.sharedViewState": true,
    // cannot commit with full commit msg window,
    "git.useEditorAsCommitInput": false,
    // terminal related
    // use terminal default keybindings rather than vscode, ctrl+k/p, https://code.visualstudio.com/docs/terminal/advanced#_chords
    "terminal.integrated.allowChords": false,
    "terminal.integrated.commandsToSkipShell": [
        // Ensure the toggle sidebar visibility keybinding skips the shell
        // "workbench.action.toggleSidebarVisibility",
        // Send quick open's keybinding to the shell
        "-workbench.action.quickOpen"
    ],
    // white space related
    "editor.renderWhitespace": "trailing",
    "files.trimTrailingWhitespace": true,
    "files.trimFinalNewlines": true,
    "editor.quickSuggestions": {
        "other": "on",
        "comments": "on",
        "strings": "on"
    },
    // ms extension
    "python.linting.flake8Enabled": true,
    "python.linting.mypyEnabled": true,
    "[python]": {
        // use black-formatter, gain speed up, https://black.readthedocs.io/en/stable/integrations/editors.html#visual-studio-code
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnType": true
    },
    "python.formatting.provider": "none",
    "vim.camelCaseMotion.enable": true,
    "vim.easymotion": true,
    "vim.foldfix": true,
    "vim.hlsearch": true,
    "vim.sneak": true,
    "vim.textwidth": 110,
    "vim.useSystemClipboard": true,
    // ??
    "editor.cursorSurroundingLines": 5,
    "editor.tokenColorCustomizations": {
        "[*]": {
            "comments": "#719872"
        }
    },
    "extensions.experimental.affinity": {
        "vscodevim.vim": 1  // for vscode vim performance improvement
    }
}
